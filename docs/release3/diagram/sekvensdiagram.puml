@startuml sekvensdiagram
actor User as "Bruker"

participant "HairdresserApp" as App
participant "TreatmentController" as TreatmentController
participant "RestTreatmentController" as RestTreatmentController
participant "TreatmentService" as TreatmentService
participant "JsonTreatmentRepository" as Repository
participant "BookingController" as BookingController
participant "RestBookingController" as RestBookingController
participant "BookingService" as BookingService
participant "WeeklyTimeSlots" as TimeSlots

note over User: Start booking process

User -> App: Start Application
App -> TreatmentController: Initialize UI Components

note over User, RestTreatmentController: Brukeren velger behandlinger i UI

User -> TreatmentController: Select Treatments (UI Interaction)
TreatmentController -> RestTreatmentController: GET /treatments
RestTreatmentController -> TreatmentService: getAllTreatments()
TreatmentService -> Repository: Retrieve treatments from storage
Repository --> TreatmentService: Return List<Treatment>
TreatmentService --> RestTreatmentController: Return List<Treatment>
RestTreatmentController --> TreatmentController: Return List<Treatment>
TreatmentController -> App: Update UI with Treatment Info

note over User, BookingController: Brukeren bekrefter behandlinger og skriver inn Ã¸nsket tidspunkt

User -> BookingController: Enter desired booking time (e.g., 2024-10-08 12:00)
BookingController -> TimeSlots: Check availability for selected times

alt Enough consecutive time slots are available
    TimeSlots --> BookingController: Availability Confirmed
    BookingController -> RestBookingController: POST /bookings (treatments + time slots)
    RestBookingController -> BookingService: createBooking(selectedTreatments, start time)
    BookingService -> TimeSlots: Book consecutive time slots for each treatment

    loop For each treatment
        BookingService -> TimeSlots: Book timeslot from start time
        TimeSlots --> BookingService: Confirm timeslot booked
        BookingService -> BookingController: Update start time for next treatment
    end

    BookingService -> Repository: Store booking details
    Repository --> BookingService: Confirm booking details stored

    BookingService --> RestBookingController: Return booking confirmation
    RestBookingController --> BookingController: Return booking status
    BookingController -> App: Show booking confirmation in UI
else Not enough slots available
    TimeSlots --> BookingController: Availability Denied
    BookingController -> App: Show availability error to user
end

@enduml
